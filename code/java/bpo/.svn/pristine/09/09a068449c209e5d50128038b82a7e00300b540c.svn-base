<template>
  <div>
    <cf-panel :title="pageTitle" :back-to="onBackTo">
      <el-form
        ref="form"
        :model="form"
        :rules="rules"
        label-width="180px"
        class="bpoForm"
        :disabled="readonly"
      >
        <fieldset>
          <legend class="bpo-legend">用户信息</legend>
          <el-row :gutter="20">
            <el-col :span="12">
              <el-form-item label="用户头像：" prop="avatar">
                <!--<el-avatar shape="circle" :size="60" src="https://empty" @error="errorHandler">
                  <img src="https://cube.elemecdn.com/e/fd/0fc7d20532fdaf769a25683617711png.png"/>
                </el-avatar>-->
                <el-upload
                  class="avatar-uploader"
                  :action="imgAddUrl"
                  :show-file-list="false"
                  :multiple="false"
                  accept="image/*"
                  :headers="avatarHeaders"
                  :on-success="handleAvatarSuccess"
                  :before-upload="beforeAvatarUpload"
                >
                  <img v-if="form.avatar" :src="form.avatar" class="avatar">
                  <i v-else class="el-icon-plus avatar-uploader-icon" />
                  <!--<img v-else src="../../../assets/systemManage/icon-user.png" class="avatar">-->
                </el-upload>
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="用户状态：">
                <el-radio-group v-model="form.status">
                  <el-radio :label="1">启用</el-radio>
                  <el-radio :label="2">禁用</el-radio>
                </el-radio-group>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row :gutter="20">
            <el-col :span="12">
              <el-form-item label="用户名：" prop="username">
                <el-input v-model="form.username" class="half" />
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="真实姓名：" prop="realName">
                <el-input v-model="form.realName" class="half" />
              </el-form-item>
            </el-col>
          </el-row>
          <el-row v-if="!userId" :gutter="20">
            <el-col :span="12">
              <el-form-item label="密码：" prop="password">
                <el-input v-model="form.password" class="half" show-password />
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="确认密码：" prop="confirmPassword">
                <el-input v-model="form.confirmPassword" class="half" show-password />
              </el-form-item>
            </el-col>
          </el-row>
          <el-row :gutter="20">
            <el-col :span="12">
              <el-form-item label="联系电话1：" prop="phone">
                <el-input v-model="form.phone" class="half" />
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="联系电话2：" prop="backupsPhone">
                <el-input v-model="form.backupsPhone" class="half" />
              </el-form-item>
            </el-col>
          </el-row>
          <el-row :gutter="20">
            <el-col :span="12">
              <el-form-item label="邮箱：" prop="email">
                <el-input v-model="form.email" type="email" class="half" />
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="备注：">
                <el-input v-model="form.describe" type="textarea" maxlength="200" style="height: 100px;" class="half" />
              </el-form-item>
            </el-col>
          </el-row>

        </fieldset>
        <fieldset>
          <legend class="bpo-legend">组织信息</legend>
          <el-row :gutter="20">
            <el-col :span="12">
              <el-form-item label="组织类型：" prop="orgKey">
                <el-select v-model="form.orgKey" :remote-method="getRemoteOptions" filterable placeholder="请选择组织" class="half">
                  <el-option v-for="(item,index) in orgOptions" :key="index" :label="item.orgName" :value="item.orgKey" />
                </el-select>
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="组织名称：" prop="companyName">
                <el-input v-model="form.companyName" class="half" />
              </el-form-item>
            </el-col>
          </el-row>
          <el-row :gutter="20">
            <el-col :span="12">
              <el-form-item label="所属部门：" prop="deptId">
                <SelectTree
                  v-model="form.deptId"
                  :props="props"
                  :options="options"
                  :value="valueEditId"
                  :accordion="isAccordion"
                  placeholder="请选择所属部门"
                  class="half"
                  @getValue="getEditValue($event)"
                />
              </el-form-item>
            </el-col>
            <el-col :span="12">
              <el-form-item label="组织角色：" prop="roleId">
                <el-select v-model="form.roleId" :remote-method="getRemoteOptions" filterable placeholder="请选择组织" class="half">
                  <el-option v-for="(item,index) in roleOptions" :key="index" :label="item.roleName" :value="item.id" />
                </el-select>
              </el-form-item>
            </el-col>
          </el-row>
        </fieldset>
        <el-row :gutter="20">
          <el-col :span="24">
            <el-form-item v-if="!readonly" class="bpoButtonGroup" label="">
              <el-button type="primary" size="medium" @click="onEditSubmit('form')">提交</el-button>
              <el-button size="medium" @click="onBackTo">关闭</el-button>
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
    </cf-panel>
  </div>
</template>
<script>
import { Loading } from 'element-ui'
import CfPanel from '@/components/Panel'
import { getUser, UpdateUser, addUser } from '@/api/user'
import { getRolesNoPage } from '../../../api/role'
import { findOrgType } from '../../../api/orgnization'
import { getToken } from '@/utils/auth'
import { checkPhone, validEmail } from '@/utils/validate'
import SelectTree from '@/components/treeSelect'
import { getAllByDUserId } from '@/api/systemManage/departmentManage'

export default {
  components: {
    CfPanel, SelectTree
  },
  data() {
    // 重复密码验证
    const pwdAgainCheck = async(rule, value, callback) => {
      if (this.form.password !== this.form.confirmPassword) {
        return callback(new Error('两次输入密码不一致！'))
      } else {
        callback()
      }
    }
    return {
      userId: this.$route.query.userId,
      readonly: this.$route.query.readonly,
      pageTitle: '新增用户',
      loading: null,
      imgAddUrl: process.env.BASE_API + '/sysUser/uploadPic',
      form: {
        name: '',
        status: 1,
        password: '',
        email: '',
        mobile: '',
        describe: null,
        avatar: ''
      },
      orgOptions: [],
      roleOptions: [],
      avatarHeaders: { 'X-Token': getToken() },
      rules: {
        avatar: [{ required: true, message: '请上传用户头像' }],
        username: [{ required: true, message: '请填写用户名' }],
        realName: [{ required: true, message: '请填写真实姓名' }],
        password: [{ required: true, message: '请填写密码' }],
        confirmPassword: [{ required: true, message: '两次输入密码不一致' }, { required: true, trigger: 'blur', validator: pwdAgainCheck }],
        email: [
          {
            validator: validEmail,
            message: '请输入正确的邮箱地址',
            trigger: 'blur'
          }
        ],
        phone: [
          {
            required: true,
            validator: checkPhone,
            message: '电话格式不正确，请输入正确的中国大陆手机号或本地固定电话',
            trigger: 'blur'
          }
        ],
        backupsPhone: [
          {
            validator: checkPhone,
            message: '电话格式不正确，请输入正确的中国大陆手机号或本地固定电话',
            trigger: 'blur'
          }
        ],
        orgKey: [{ required: true, message: '请选择组织类型' }],
        companyName: [{ required: true, message: '请填写组织名称' }],
        roleId: [{ required: true, message: '请选择角色' }],
        deptId: [{ required: true, message: '请选择归属部门' }]
      },

      isClearable: true, // 可清空（可选）
      isAccordion: false, // 可收起（可选）
      valueId: '0', // 初始ID（可选）
      valueEditId: '',
      props: { // 配置项（必选）
        value: 'deptId',
        label: 'deptName',
        children: 'depts'
      },
      options: []

    }
  },
  watch: {
  },
  created() {
    this.getRemoteOptions()
  },
  mounted() {
    this.loadData()
  },
  methods: {
    getEditValue(val) {
      this.form.deptId = val
    },
    getRemoteOptions() {
      getRolesNoPage().then(res => {
        this.roleOptions = res.data.data
        // eslint-disable-next-line handle-callback-err
      }).catch(err => {
      })
      findOrgType().then(res => {
        this.orgOptions = res.data.data
        // eslint-disable-next-line handle-callback-err
      }).catch(err => {
      })
      getAllByDUserId().then(res => {
        this.options = res.data.data
        // eslint-disable-next-line handle-callback-err
      }).catch(err => {
      })
    },
    errorHandler() {
      return true
    },
    handleAvatarSuccess(res, file) {
      res.code === 20000
        ? (this.form.avatar = res.data.url)
        : this.$message.error('上传头像出错!')
      this.loading.close()
    },
    beforeAvatarUpload(file) {
      const isLt2M = file.size / 1024 / 1024 < 2
      if (!isLt2M) {
        this.$message.error('上传图片大小不能超过 2MB!')
      }
      this.loading = Loading.service({ text: '努力上传中，请稍后。。。' })
      return isLt2M
    },
    onEditSubmit(formName) {
      this.$refs[formName].validate(valid => {
        if (valid) {
          var option = addUser
          if (this.form.id) {
            option = UpdateUser
          }
          option(this.form).then(res => {
            this.onBackTo()
          }).catch(() => {
            console.log('用户详情提交失败')
          })
        } else {
          this.$notify({
            title: '失败',
            duration: '2000',
            message: '填写信息有误，请优化后再提交!',
            type: 'error'
          })
          console.log('error submit!!')
          return false
        }
      })
    },
    onBackTo() {
      this.$router.go(-1)
    },
    loadData() {
      if (this.userId) {
        this.pageTitle = '修改用户'

        this.listLoading = true
        getUser().then(res => {
          this.listLoading = false
          this.form = res.data.data
          this.$set(this.form, 'password', '')
        }).catch(() => {
          this.listLoading = false
          console.log('用户详情获取失败')
        })
      }
    }
  }
}
</script>

<style rel="stylesheet/scss" lang="scss" scoped>
  /deep/.el-textarea textarea{
    height: 100%;
  }
  .cf-button-group {
    margin-top: 20px;
  }
  .cf-light-edit {
    margin-top: 15px;
  }
  fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
  }
  fieldset {
    padding: 0;
    margin: 0;
    border: 0;
    min-width: 0;
  }
  fieldset:first-child{
    legend{
      border-top: none;
      padding-top: 0px;
    }
  }
  .toobar {
    margin-bottom: 10px;
    text-align: right;
  }
  .electricBoxes {
    margin-bottom: 20px;
  }

  .avatar-uploader{
    width: 64px;
    height: 64px;
    border: none;
    //border-radius: 50%;
    border: 1px dashed #dde0e7;
    overflow: hidden;
    background-size: 100% 100%;
    background-size: contain;
  }
  /deep/ .el-upload {
    border: none;
    width: 100%;
    height: 100%;
  }
  .avatar{
    width: 100%;
    height: 100%;
  }
  .avatar-uploader-icon {
    font-size: 28px;
    color: #8c939d;
    width: 64px;
    height: 64px;
    line-height: 64px;
    text-align: center;
  }
</style>
