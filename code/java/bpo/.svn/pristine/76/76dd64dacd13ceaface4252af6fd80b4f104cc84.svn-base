package com.rz.iot.bpo.mina.model;

import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import org.springframework.format.annotation.DateTimeFormat;

import java.util.Date;

@Data
public class MinaClassesGenerate {
    @ApiModelProperty(value = "批次id", example = "1")
    private Integer id;
    @ApiModelProperty(value = "批次id",example = "1")
    private Integer batchId;
    @ApiModelProperty(value = "状态",example = "1")
    private Integer status;
    @ApiModelProperty(value = "创建时间")
    private Date createTime;
    @ApiModelProperty(value = "修改时间")
    private Date updateTime;
    //班次编号
    @ApiModelProperty(value = "班次编号", example = "SN_20200506_1600_2300")
    private String classSn;
    //班次名称
    @ApiModelProperty(value = "班次名称", example = "某某中转场早班")
    private String className;
    //开始日期
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    @JsonFormat(pattern = "yyyy-MM-dd", timezone = "GMT+8")
    @ApiModelProperty(value = "开始日期", example = "2020-05-06 ")
    private Date startDate;
    //结束日期
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    @JsonFormat(pattern = "yyyy-MM-dd", timezone = "GMT+8")
    @ApiModelProperty(value = "结束日期", example = "2020-05-13")
    private Date endDate;
    //开始时间
    @DateTimeFormat(pattern = "HH:mm:ss")
    @JsonFormat(pattern = "HH:mm:ss", timezone = "GMT+8")
    @ApiModelProperty(value = "开始时间", example = "16:00:00")
    private Date startTime;
    //结束时间
    @DateTimeFormat(pattern = "HH:mm:ss")
    @JsonFormat(pattern = "HH:mm:ss", timezone = "GMT+8")
    @ApiModelProperty(value = "结束时间", example = "23:00:00")
    private Date endTime;
    //到场时间
    @DateTimeFormat(pattern = "HH:mm:ss")
    @JsonFormat(pattern = "HH:mm:ss", timezone = "GMT+8")
    @ApiModelProperty(value = "到场时间", example = "13:00:00")
    private Date arriveTime;
    //剔除时间
    @ApiModelProperty(value = "剔除时间 ", example = "1")
    private Integer excludeHour;
    //需求人数
    @ApiModelProperty(value = "需求人数", example = "30")
    private Integer peopleNumber;
    //项目id
    @ApiModelProperty(value = "项目id", example = "3")
    private Integer projectId;
    //来源1:接口录入2:文件导入3:手工输入
    @ApiModelProperty(value = "来源1:接口录入2:文件导入3:手工输入", example = "3")
    private Integer source;
    //排班状态1:已完成0:未完成
    @ApiModelProperty(value = "排班状态1:已完成0:未完成", example = "0")
    private Byte scheduleStatus;
    //1:按小时2:按工序
    @ApiModelProperty(value = "1:按小时2:按工序", example = "1")
    private Integer type;
    //是否是特殊岗位
    @ApiModelProperty(value = "是否是特殊岗位1:是,2:不是", example = "1")
    private Integer isSpecial;
    //特殊岗位补贴
    @ApiModelProperty(value = "特殊岗位补贴", example = "11.00")
    private String specialAllowance;
    //餐补
    @ApiModelProperty(value = "餐补", example = "12.00")
    private String mealAllowance;
    //晚班补贴
    @ApiModelProperty(value = "晚班补贴", example = "10.00")
    private String nightAllowance;
    //是否有补贴
    @ApiModelProperty(value = "是否有补贴1:是,2:不是", example = "1")
    private Integer isAllowance;
    //最近修改人
    @ApiModelProperty(value = "最近修改人id", example = "1")
    private Integer updateUserId;
    //最近修改人
    @ApiModelProperty(value = "最近修改人名字", example = "我是最近修改人")
    private Integer updateUserName;
}