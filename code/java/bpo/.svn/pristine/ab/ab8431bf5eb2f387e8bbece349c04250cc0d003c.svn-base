<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rz.iot.bpo.mina.mapper.MinaBatchMapper" >
  <resultMap id="BaseResultMap" type="com.rz.iot.bpo.mina.model.MinaBatch" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="batch_name" property="batchName" jdbcType="VARCHAR" />
    <result column="schedule_rule_id" property="scheduleRuleId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, batch_name, schedule_rule_id, type, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from bpo_batch
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bpo_batch
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rz.iot.bpo.mina.model.MinaBatch" >
    insert into bpo_batch (id, batch_name, schedule_rule_id,
      type, status, create_time,
      update_time)
    values (#{id,jdbcType=INTEGER}, #{batchName,jdbcType=VARCHAR}, #{scheduleRuleId,jdbcType=INTEGER},
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rz.iot.bpo.mina.model.MinaBatch" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into bpo_batch
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="batchName != null" >
        batch_name,
      </if>
      <if test="scheduleRuleId != null" >
        schedule_rule_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="batchName != null" >
        #{batchName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleRuleId != null" >
        #{scheduleRuleId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rz.iot.bpo.mina.model.MinaBatch" >
    update bpo_batch
    <set >
      <if test="batchName != null" >
        batch_name = #{batchName,jdbcType=VARCHAR},
      </if>
      <if test="scheduleRuleId != null" >
        schedule_rule_id = #{scheduleRuleId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rz.iot.bpo.mina.model.MinaBatch" >
    update bpo_batch
    set batch_name = #{batchName,jdbcType=VARCHAR},
      schedule_rule_id = #{scheduleRuleId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>