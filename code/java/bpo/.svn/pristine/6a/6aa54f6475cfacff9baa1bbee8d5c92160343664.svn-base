<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rz.iot.bpo.mapper.SysDeptMapper" >
  <resultMap id="BaseResultMap" type="com.rz.iot.bpo.model.SysDept" >
    <id column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="dept_code" property="deptCode" jdbcType="VARCHAR" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="is_top" property="isTop" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="descendants" property="descendants" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
    <result column="leader" property="leader" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="top_id" property="topId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    dept_id, dept_code, dept_name, is_top, parent_id, descendants, order_num, leader,
    phone, email, status, create_time, update_time
    dept_id, dept_code, dept_name, is_top, parent_id, descendants,top_id,
    order_num, leader,
    phone, email, status, create_time, update_time,create_name
  </sql>
  <sql id="My_Column_List">
    dept1.dept_id, dept1.dept_code, dept1.dept_name, dept1.is_top, dept1.parent_id, dept1.descendants,
    dept1.order_num, dept1.leader,dept1.top_id,
    dept1.phone, dept1.email, dept1.status, dept1.create_time, dept1.update_time,dept1.create_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_dept
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_dept
    where
    dept_id in( select depts.dept_id from
                (SELECT dept1.dept_id from sys_dept dept1 where
                    FIND_IN_SET(
                      dept1.dept_id,(
                        SELECT descendants from sys_dept dept where dept.dept_id = #{deptId}
                      )
                    )
                ) depts
              )
  </delete>

  <insert id="insert" parameterType="com.rz.iot.bpo.model.SysDept" >
    insert into sys_dept (dept_id, dept_code, dept_name, 
      is_top, parent_id, descendants, 
      order_num, leader, phone, 
      email, status, create_time, 
      update_time)
    values (#{deptId,jdbcType=INTEGER}, #{deptCode,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, 
      #{isTop,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{descendants,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=INTEGER}, #{leader,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rz.iot.bpo.model.SysDept" useGeneratedKeys="true" keyProperty="deptId">
    insert into sys_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="deptCode != null" >
        dept_code,
      </if>
      <if test="deptName != null" >
        dept_name,
      </if>
      <if test="isTop != null" >
        is_top,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="descendants != null" >
        descendants,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="leader != null" >
        leader,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="topId !=null" >
        top_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createName != null" >
        create_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptCode != null" >
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null" >
        #{isTop,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="descendants != null" >
        #{descendants,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="leader != null" >
        #{leader,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="topId != null" >
        #{topId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createName != null" >
        #{createName,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rz.iot.bpo.model.SysDept" >
    update sys_dept
    <set >
      <if test="deptCode != null" >
        dept_code = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null" >
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null" >
        is_top = #{isTop,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="descendants != null" >
        descendants = #{descendants,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="leader != null" >
        leader = #{leader,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="topId != null" >
        top_id = #{topId,jdbcType=INTEGER},
      </if>
      <if test="createName != null" >
        create_name = #{createName,jdbcType=INTEGER},
      </if>
    </set>
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rz.iot.bpo.model.SysDept" >
    update sys_dept
    set dept_code = #{deptCode,jdbcType=VARCHAR},
      dept_name = #{deptName,jdbcType=VARCHAR},
      is_top = #{isTop,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      descendants = #{descendants,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      leader = #{leader,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>

  <select id="findAll"  resultMap="BaseResultMap">
         select <include refid="Base_Column_List" /> from sys_dept dept1 where  not EXISTS (
            select dept2.* from (
                select dept1.* from sys_dept dept1 where dept1.top_id in (
                    select dept1.top_id from sys_dept dept1 where dept_id in (
                        select dept1.top_id from sys_dept dept1 LEFT JOIN bpo_supplier sup on sup.supplier_dept_id = dept1.dept_id
                        LEFT JOIN sys_dept_sub_rel rel on rel.sub_id = sup.company_id
                        LEFT JOIN sys_dept dept on dept.dept_id = rel.dept_id
                        where 1=1 and rel.sub_type = 2
                          <if test="entity.dataScope!=null">
                              and ${entity.dataScope}
                          </if>
                    )
                )) dept2
            where dept1.dept_id = dept2.dept_id
        )and dept1.is_top = 0 and dept1.status != ${@com.rz.iot.bpo.common.constant.DictDataConstants@DELETE_STATUS}
              <if test="entity.userId!=null">
                  and dept1.top_id =(SELECT dept1.top_id from sys_dept dept1 LEFT JOIN sys_dept_user_rel rel on rel.dept_id = dept1.dept_id where rel.user_id =#{entity.userId})
              </if>
              <if test="name!=null and name!=''">
                  and dept1.dept_name like concat('%',concat(#{name},'%'))
              </if>
              <if test="status!=null and status!=''">
                  and dept1.status = #{status}
              </if>
        union
        select <include refid="Base_Column_List" /> from sys_dept dept1 where not EXISTS (
            select dept2.* from (
                select dept1.* from sys_dept dept1 where dept1.top_id in (
                    select dept1.top_id from sys_dept dept1 where dept_id in (
                        select dept1.top_id from sys_dept dept1 LEFT JOIN bpo_supplier sup on sup.supplier_dept_id = dept1.dept_id
                        LEFT JOIN sys_dept_sub_rel rel on rel.sub_id = sup.company_id
                        LEFT JOIN sys_dept dept on dept.dept_id = rel.dept_id
                        where 1=1 and rel.sub_type = 2
                          <if test="entity.dataScope!=null">
                              and ${entity.dataScope}
                          </if>
                    )
                )) dept2
            where dept1.dept_id = dept2.dept_id
        )and dept1.is_top = 1 and dept1.status != ${@com.rz.iot.bpo.common.constant.DictDataConstants@DELETE_STATUS}
      <if test="entity.userId!=null">
          and dept1.top_id =(SELECT dept1.top_id from sys_dept dept1 LEFT JOIN sys_dept_user_rel rel on rel.dept_id = dept1.dept_id where rel.user_id =#{entity.userId})
      </if>
      <if test="name!=null and name!=''">
          and dept1.dept_name like concat('%',concat(#{name},'%'))
      </if>
      <if test="status!=null and status!=''">
          and dept1.status = #{status}
      </if>

  </select>

  <!--插入客户关联信息-->
  <insert id="insertCustomRelation" parameterType="com.rz.iot.bpo.model.SysDept">
    insert into sys_dept_sub_rel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subId != null" >
        sub_id,
      </if>
      <if test="subType != null" >
        sub_type,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subId != null" >
        #{subId},
      </if>
      <if test="subType != null" >
        #{subType},
      </if>
      <if test="deptId != null" >
        #{deptId},
      </if>
      <if test="status != null" >
        #{status},
      </if>
    </trim>
  </insert>

  <update id="updateCustomRelation" parameterType="com.rz.iot.bpo.model.SysDept">
    update sys_dept_sub_rel
    <set>
      <if test="subId != null" >
        sub_id = #{subId},
      </if>
      <if test="subType != null" >
        sub_type = #{subType},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
    </set>
    where sub_id = #{subId}
  </update>

  <select id="selectByCompanyId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_dept
    where parent_id = #{companyId,jdbcType=INTEGER}
    AND `status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    AND  is_top = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_DEPT_IS_TOP}
  </select>

  <resultMap id="DeptShow" type="com.rz.iot.bpo.model.show.bpoPerson.SysDeptShow">
    <id column="dept_id" property="deptId"/>
    <result column="dept_name" property="deptName"/>
    <collection property="deptShowList" select="findAllSysDeptByComId" column="dept_id"/>
  </resultMap>
  <select id="findAllSysDeptByComId" parameterType="java.lang.Integer" resultMap="DeptShow">
    select dept.dept_id,dept.dept_name from sys_dept dept
    where dept.is_top = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_DEPT_IS_NOT_TOP} and dept.parent_id = #{value} and `status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
  </select>

  <select id="findAllSysDeptByUserId" parameterType="java.lang.Integer" resultMap="DeptShow">
    select dept.dept_id,dept.dept_name from sys_dept dept
    LEFT JOIN sys_dept_user_rel user_rel ON user_rel.dept_id = dept.dept_id AND user_rel.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    WHERE dept.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    AND
    dept.is_top = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_DEPT_IS_TOP}
    AND (
    CASE #{value} WHEN
    ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_ORG_ADMIN}
    THEN
    true
    ELSE
    user_rel.user_id = #{value}
    END
    )
  </select>
  <select id="findAllTopDept" resultType="com.rz.iot.bpo.model.SysDept">
    select dept_id as deptId,dept_name as deptName
    from
    sys_dept
    where
    is_top = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_DEPT_IS_TOP}
    AND `status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
  </select>

  <resultMap id="adminDept" type="com.rz.iot.bpo.model.show.bpoPerson.SysDeptShow">
    <id column="dept_id" property="deptId"/>
    <result column="dept_name" property="deptName"/>
    <collection property="deptShowList" select="adminSysDept" column="dept_id" javaType="java.util.List"/>
  </resultMap>

  <resultMap id="sysDept" type="com.rz.iot.bpo.model.show.bpoPerson.SysDeptShow">
    <id column="dept_id" property="deptId"/>
    <result column="dept_name" property="deptName"/>
    <collection property="deptShowList" select="adminSysDept" column="deptId=dept_id" javaType="java.util.List"/>
  </resultMap>

  <select id="adminSysDept" resultMap="sysDept">
    select dept.dept_id,dept.dept_name from sys_dept dept
    where dept.is_top = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_DEPT_IS_NOT_TOP}
    and `status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    and dept.parent_id =
      #{deptId}
  </select>


  <select id="adminFindAllSysDept" resultMap="adminDept">
      select dept.dept_id,dept.dept_name from sys_dept dept
      where dept.is_top = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_DEPT_IS_TOP}
      and `status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
  </select>

  <select id="getAll" resultMap="BaseResultMap">
    select * from sys_dept
  </select>

  <update id="updateByCustomId" parameterType="java.lang.Integer">
    update
          sys_dept_sub_rel
          set status = ${@com.rz.iot.bpo.common.constant.DictDataConstants@DELETE_STATUS}
      WHERE
          sub_id = (
            SELECT
                org_id
            FROM
                bpo_customer_infos
            WHERE
            id = #{id}
          )
  </update>

  <resultMap id="UpOrg" type="com.rz.iot.bpo.model.show.bpoPerson.SysDeptShow">
    <result property="deptId" column="dept_id"/>
    <result property="deptName" column="dept_name"/>
    <collection property="deptShowList" column="{deptId=parent_id}" select="upFindOrgByDeptId" ofType="com.rz.iot.bpo.model.show.bpoPerson.SysDeptShow"/>
  </resultMap>
 <!--查询当前用户可以操作的组织架构-->
  <select id="findCanControl"  resultMap="BaseResultMap">
    select  <include refid="My_Column_List" /> from sys_dept dept1
      <if test="userId!=null">
          where
          FIND_IN_SET(dept1.dept_id,
          (SELECT dept1.descendants from sys_dept dept1 LEFT JOIN sys_dept_user_rel rel on rel.dept_id = dept1.dept_id where rel.user_id =${userId}))
      </if>
  </select>
  <select id="upFindOrgByDeptId" resultMap="UpOrg">
    select dept_id,dept_name,
    (
    case is_top when ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_DEPT_IS_TOP}
    THEN ${@com.rz.iot.bpo.common.constant.DictDataConstants@NOT_VERIFY_STATUS}
    ELSE
    parent_id
    END
    ) as parent_id,is_top from sys_dept
    where dept_id = #{deptId}
 </select>

    <resultMap id="UpOrg2" type="com.rz.iot.bpo.model.show.bpoPerson.SysDeptShow">
        <result property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="parentId" column="parent_id"/>
        <result property="isTop" column="is_top"/>

    </resultMap>
    <select id="findUpDept" resultMap="UpOrg2">
        select
          dept.*
        from sys_dept dept
        where dept_id = #{deptId}
 </select>
<select id="findAllOther"  resultMap="BaseResultMap">
  select
    <include refid="My_Column_List" />
   from sys_dept dept1 where dept1.top_id in (
	select dept1.top_id from sys_dept dept1 where dept_id in (
		select dept1.top_id from sys_dept dept1 LEFT JOIN bpo_supplier sup on sup.supplier_dept_id = dept1.dept_id
		LEFT JOIN sys_dept_sub_rel rel on rel.sub_id = sup.company_id
		LEFT JOIN sys_dept dept on dept.dept_id = rel.dept_id
		where rel.sub_type = 2
        <if test="entity.dataScope!=null">
            and ${entity.dataScope}
        </if>
	)
) and dept1.is_top = 0 and dept1.status != ${@com.rz.iot.bpo.common.constant.DictDataConstants@DELETE_STATUS}
    <if test="name!=null and name!=''">
        and dept1.dept_name like concat('%',concat(#{name},'%'))
    </if>
    <if test="status!=null and status!=''">
        and dept1.status = #{status}
    </if>
union
select
    <include refid="My_Column_List" />
 from sys_dept dept1 where dept1.top_id in (
	select dept1.top_id from sys_dept dept1 where dept_id in (
		select dept1.top_id from sys_dept dept1 LEFT JOIN bpo_supplier sup on sup.supplier_dept_id = dept1.dept_id
		LEFT JOIN sys_dept_sub_rel rel on rel.sub_id = sup.company_id
		LEFT JOIN sys_dept dept on dept.dept_id = rel.dept_id
		where rel.sub_type = 2
		<if test="entity.dataScope!=null">
            and ${entity.dataScope}
        </if>
	)
) and dept1.is_top = 1 and dept1.status != ${@com.rz.iot.bpo.common.constant.DictDataConstants@DELETE_STATUS}
    <if test="name!=null and name!=''">
        and dept1.dept_name like concat('%',concat(#{name},'%'))
    </if>
    <if test="status!=null and status!=''">
        and dept1.status = #{status}
    </if>


</select>
 <update id="updateParent">
    UPDATE sys_dept dept
    SET descendants = concat( descendants, #{append} )
    WHERE
        dept.dept_id IN (
        SELECT
            tab1.dept_id
        FROM
            (
            SELECT
                dept_id
            FROM
                sys_dept
            WHERE
            FIND_IN_SET( #{id}, descendants )) tab1)
  </update>

  <update id="updateAfterDelete" >
        update sys_dept dept
        <set>
            dept.descendants = REPLACE(descendants,#{name},'')
        </set>
            where dept.dept_id in(
                select dept1.dept_id from(
                    SELECT dept_id from sys_dept where FIND_IN_SET(
                      #{id},descendants
                    ) and dept_id !=#{id}
                    <if test="parentId!=null">
                        and dept_id!=#{parentId}
                    </if>
                ) dept1
            )
  </update>
  <select id="selectIsOrNotConnect" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT sub.id from sys_dept_sub_rel sub where sub.dept_id in (
            SELECT dept1.dept_id from sys_dept dept1 where
            FIND_IN_SET(dept1.dept_id,(SELECT descendants from sys_dept dept where dept.dept_id = #{id}))
        ) and sub.status = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
        UNION
        SELECT rel.id from sys_dept_user_rel rel where rel.dept_id in (
            SELECT dept1.dept_id from sys_dept dept1 where
            FIND_IN_SET(dept1.dept_id,(SELECT descendants from sys_dept dept where dept.dept_id = #{id}))
        ) and rel.status = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
  </select>

    <select id="getByDeptId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="My_Column_List" />
        from sys_dept dept1 where FIND_IN_SET(#{deptId},descendants)
    </select>

    <select id="getCondition" resultMap="BaseResultMap">

	(
		select
		<include refid="My_Column_List" />
		from sys_dept dept1 LEFT JOIN sys_company company on dept1.dept_id = company.dept_id
		LEFT JOIN sys_dept_sub_rel sub  on company.id = sub.sub_id where sub.dept_id in (
			SELECT
				dept1.dept_id
				FROM
						sys_dept dept1
				WHERE
				FIND_IN_SET(
								dept1.dept_id,
								(
								SELECT
										dept.descendants
								FROM
										sys_dept dept
										LEFT JOIN sys_dept_user_rel user_rel ON dept.dept_id = user_rel.dept_id
										LEFT JOIN sys_user USER ON USER.user_id = user_rel.user_id
								WHERE
								USER.user_id = #{userId}
			))
		)
		<if test="status!=null and status!=''">
            and dept1.`status` =#{status}
        </if>
        <if test="deptName!=null and deptName!=''">
            and dept_name like concat('%',concat(#{deptName},'%'))
        </if>

	)
	UNION
	(
	 SELECT
        <include refid="My_Column_List" />
			FROM
					sys_dept dept1
			WHERE
			FIND_IN_SET(
							dept1.dept_id,
							(
							SELECT
									dept.descendants
							FROM
									sys_dept dept
									LEFT JOIN sys_dept_user_rel user_rel ON dept.dept_id = user_rel.dept_id
									LEFT JOIN sys_user USER ON USER.user_id = user_rel.user_id
							WHERE
							USER.user_id = #{userId}
		))
        <if test="status!=null and status!=''">
            and dept1.`status` =#{status}
        </if>
        <if test="deptName!=null and deptName!=''">
            and dept_name like concat('%',concat(#{deptName},'%'))
        </if>
	)

    union

    (
        select
        <include refid="My_Column_List" />
         from sys_dept dept1 where dept1.dept_id in (
            select dept1.top_id from (
                (
                    select
                    <include refid="My_Column_List" />
                     from sys_dept dept1 LEFT JOIN sys_company company on dept1.dept_id = company.dept_id
                    LEFT JOIN sys_dept_sub_rel sub  on company.id = sub.sub_id where sub.dept_id in (
                        SELECT
                            dept1.dept_id
                            FROM
                                    sys_dept dept1
                            WHERE
                            FIND_IN_SET(
                                            dept1.dept_id,
                                            (
                                            SELECT
                                                    dept.descendants
                                            FROM
                                                    sys_dept dept
                                                    LEFT JOIN sys_dept_user_rel user_rel ON dept.dept_id = user_rel.dept_id
                                                    LEFT JOIN sys_user USER ON USER.user_id = user_rel.user_id
                                            WHERE
                                            USER.user_id = #{userId}
                        ))
                        )
                            <if test="status!=null and status!=''">
                                and dept1.`status` =#{status}
                            </if>
                            <if test="deptName!=null and deptName!=''">
                                and dept_name like concat('%',concat(#{deptName},'%'))
                            </if>
                    union
                    (
                     SELECT
                        <include refid="My_Column_List" />
                            FROM
                                    sys_dept dept1
                            WHERE
                            FIND_IN_SET(
                                            dept1.dept_id,
                                            (
                                            SELECT
                                                    dept.descendants
                                            FROM
                                                    sys_dept dept
                                                    LEFT JOIN sys_dept_user_rel user_rel ON dept.dept_id = user_rel.dept_id
                                                    LEFT JOIN sys_user USER ON USER.user_id = user_rel.user_id
                                            WHERE
                                            USER.user_id = #{userId}
                        ))
                        <if test="status!=null and status!=''">
                            and dept1.`status` =#{status}
                        </if>
                        <if test="deptName!=null and deptName!=''">
                            and dept_name like concat('%',concat(#{deptName},'%'))
                        </if>
                    )
                )
            ) dept1
        )
	)

    </select>
    <select id="findAllbySuperAdmin" resultType="com.rz.iot.bpo.model.SysDept">

    </select>

    <update id="updateStatus" parameterType="com.rz.iot.bpo.model.SysDept">
       update sys_dept dept1
        set dept1.`status` =  #{status}
        where dept1.dept_id in (
            SELECT dept_id from (
                (
                    SELECT
                        dept1.dept_id
                        FROM
                                sys_dept dept1
                        WHERE
                        FIND_IN_SET(
                                        dept1.dept_id,
                                        (
                                        SELECT
                                                dept.descendants
                                        FROM
                                                sys_dept dept
                                        WHERE
                                        dept.dept_id = #{deptId}
                    ))
                ) other
            )
        )
    </update>

    <!--新增部门与用户之间的关联关系-->
    <insert id="addDeptUserRel">
        INSERT INTO sys_dept_user_rel(user_id,dept_id)
        values(
            #{userId},#{deptId}
        )
    </insert>
    <!--修改部门与用户之间的关联关系-->
    <update id="updateDeptUserRel">
        update sys_dept_user_rel
        set dept_id = #{deptId}
        where user_id = #{userId}
    </update>
</mapper>