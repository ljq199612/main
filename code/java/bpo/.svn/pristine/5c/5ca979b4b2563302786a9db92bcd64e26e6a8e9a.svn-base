package com.rz.iot.bpo.framework.task;

import com.rz.iot.bpo.common.constant.DictDataConstants;
import com.rz.iot.bpo.common.utils.DateUtils;
import com.rz.iot.bpo.mapper.BpoAttendanceInfoMapper;
import com.rz.iot.bpo.mapper.BpoBillPersonMonthMapper;
import com.rz.iot.bpo.mapper.BpoBillSupplierDayMapper;
import com.rz.iot.bpo.mapper.BpoBillSupplierMonthMapper;
import com.rz.iot.bpo.model.BpoAttendanceInfo;
import com.rz.iot.bpo.model.BpoBillPersonMonth;
import com.rz.iot.bpo.model.BpoBillSupplierDay;
import com.rz.iot.bpo.model.BpoBillTime;
import org.apache.ibatis.annotations.Param;
import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.annotation.EnableScheduling;

import javax.annotation.Resource;
import java.math.BigDecimal;
import java.util.*;

@Configuration
@EnableScheduling
public class BillTask {

    @Resource
    private BpoAttendanceInfoMapper attendanceInfoMapper;

    @Resource
    private BpoBillPersonMonthMapper billPersonMonthMapper;

    @Resource
    private BpoBillSupplierDayMapper billSupplierDayMapper;

    @Resource
    private BpoBillSupplierMonthMapper billSupplierMonthMapper;

    //生成日账单，月账单
    public void createBillTask() {
        //获取昨天的已确认考勤信息。
        String yesterday = DateUtils.getYesterdayDate();
        List<BpoAttendanceInfo> infoList = attendanceInfoMapper.selectConfirmedByDate(yesterday);
        Map<String,BillMapEntity> supplierDayMap = new HashMap<>();
        Map<String,BillMapEntity> supplierMonthMap = new HashMap<>();
        Map<String,BillMapEntity> personMonthMap = new HashMap<>();
        for (BpoAttendanceInfo info : infoList) {
            //获取该考勤记录项目下所有收款方付款方
            String date = info.getAttendanceDate().toString();
            Integer payerId = 1;
            Integer payeeId = 2;
            String supplierDayMapKey = "date:" + date + "payerId:" + payerId.toString() + "payeeId" + payeeId.toString();
            //生成计时账单明细
            BpoBillTime billTime = createBillTime(info);

            if (!supplierDayMap.containsKey(supplierDayMapKey)) {
                BillMapEntity mapEntity = new BillMapEntity();
                mapEntity.setDate(date);
                mapEntity.setPayerId(payerId);
                mapEntity.setPayeeId(payeeId);
                mapEntity.getBillTimeList().add(billTime);
                supplierDayMap.put(supplierDayMapKey,mapEntity);
            } else {
                supplierDayMap.get(supplierDayMapKey).getBillTimeList().add(billTime);
            }

        }


        Collection<BillMapEntity> supplierDayValues = supplierDayMap.values();
        for (BillMapEntity mapEntity:supplierDayValues) {
            String date = mapEntity.getDate();
            Integer payerId = mapEntity.getPayerId();
            Integer payeeId = mapEntity.getPayeeId();

            BpoBillSupplierDay billSupplierDay = billSupplierDayMapper.selectDayBill(date,payerId,payeeId);

            for (BpoBillTime billTime:mapEntity.getBillTimeList()) {

            }
            //个人月账单

            //供应商日账单


            //供应商月账单
        }

    }


    public static void main(String[] args) {
        Map<String,Integer> map = new HashMap<>();
        Collection<Integer> values = map.values();
        System.out.println(values);
    }


    private void billSupplierDayHandler(BpoBillSupplierDay billSupplierDay) {
//        if (billSupplierDay == null) {
//            billSupplierDay = new BpoBillSupplierDay();
//            billSupplierDay.setTransferStationId();
//            billSupplierDay.setProjectId();
//            billSupplierDay.setBillCycle();
//            billSupplierDay.setPayerId();
//            billSupplierDay.setPayeeId();
//            billSupplierDay.setFeeRuleType(2);
//            billSupplierDay.setTotalOutput();
//            billSupplierDay.setTotalHours();
//            billSupplierDay.setTotalPeople();
//            billSupplierDay.setSupplierSalary();
//            billSupplierDay.setTotalDeduction();
//            billSupplierDay.setRealBillAmount();
//        }

    }


    private BpoBillTime createBillTime(BpoAttendanceInfo attendanceInfo) {
        BpoBillTime billTime = new BpoBillTime();
        billTime.setProjectId(attendanceInfo.getProjectId());
        billTime.setSupplierInfoId(1);
        billTime.setBillingCycle(attendanceInfo.getAttendanceDate().toString());
        billTime.setPersonId(attendanceInfo.getPersonId());
        billTime.setFeeRuleType(2);
        billTime.setAttendanceStartTime(attendanceInfo.getClockInTime());
        billTime.setAttendanceEndTime(attendanceInfo.getClockOutTime());
        billTime.setWageHours(attendanceInfo.getApprovalWageHours());
        billTime.setSalaryStandard(BigDecimal.ZERO);
        billTime.setFoodSubsidy(BigDecimal.ZERO);
        billTime.setNightSubsidy(BigDecimal.ZERO);
        billTime.setOtherSubsidy(BigDecimal.ZERO);
        billTime.setDeduction(BigDecimal.ZERO);
        billTime.setRealIncome(BigDecimal.ZERO);
        return billTime;
    }
}
