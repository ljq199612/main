<template>
  <CfPanel title="场地管理" class="form main">
    <el-form ref="search_from" :inline="true" :model="search_from" class="bpoFormInline">
      <el-form-item label="场地类型：" prop="type">
        <el-select v-model="search_content.type" placeholder="请选择场地类型">
          <el-option
            v-for="(item,index) in search_from.site_type"
            :key="index"
            :label="item.dictLabel"
            :value="item.dictValue"
          />
        </el-select>
      </el-form-item>
      <el-form-item label="场地名称：" prop="transferName">
        <el-input v-model="search_content.transferName" placeholder="请输入场地名称" />
      </el-form-item>
      <el-form-item label="归属地：" prop="region">
        <el-cascader v-model="search_content.region" :props="provincialCityFormat" :options="search_from.provincialCity" @active-item-change="queryRegion" />
      </el-form-item>
      <el-form-item label="状态：" prop="status">
        <el-select v-model="search_content.status" placeholder="请选择状态">
          <el-option
            v-for="(item,index) in search_from.state_data"
            :key="index"
            :label="item.label"
            :value="item.value"
          />
        </el-select>
      </el-form-item>
      <el-form-item>
        <el-button class="bpoBtn" @click="search_button">搜索</el-button>
        <el-button @click="reset_button">重置</el-button>
      </el-form-item>
    </el-form>
    <el-button type="primary" icon="el-icon-plus" @click="add_field">新增</el-button>
    <el-table
      v-loading="listLoading"
      :data="fieldList"
      class="bpoTable"
      fit
    >
      <el-table-column align="center" label="序号" width="80">
        <template slot-scope="scope">{{ scope.row.num }}</template>
      </el-table-column>
      <el-table-column align="center" label="场地名称" min-width="80">
        <template slot-scope="scope">{{ scope.row.name }}</template>
      </el-table-column>
      <el-table-column align="center" label="场地编号" min-width="80">
        <template slot-scope="scope">{{ scope.row.code }}</template>
      </el-table-column>
      <el-table-column align="center" label="场地类型" min-width="80">
        <template slot-scope="scope">{{ scope.row.typeName }}</template>
      </el-table-column>
      <el-table-column align="center" label="场地归属" min-width="200">
        <template slot-scope="scope">{{ scope.row.sysDeptShowName }}</template>
      </el-table-column>
      <el-table-column align="center" label="归属地" min-width="80">
        <template slot-scope="scope">{{ scope.row.sysAreaRel.provinceName }}  {{ scope.row.sysAreaRel.cityName }}  {{ scope.row.sysAreaRel.districtName }}</template>
      </el-table-column>
      <el-table-column align="center" label="状态" width="80">
        <template slot-scope="scope">
          <el-switch v-model="scope.row.status" @change="status_switch(scope.row)" />
        </template>
      </el-table-column>
      <el-table-column align="center" label="操作" width="150">
        <template slot-scope="scope">
          <el-button type="text" style="color:#4794F7" size="mini" @click="details_button(scope.row)">详情</el-button>
          <el-button type="text" style="color:#19D185" size="mini" @click="modify_button(scope.row)">修改</el-button>
          <el-button v-if="scope.row.status!='deleted'" style="color:#F52222" size="mini" type="text" @click="delete_button(scope.row,'deleted')">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <pagination
      v-show="total>0"
      :total="total"
      lang-type="zh"
      :page.sync="page.pageNum"
      :limit.sync="page.pageSize"
      @pagination="findAll"
    />
  </CfPanel>
</template>

<script type="text/javascript">
// 请求方法加载
import { getRelProvinces, getRelCityByPCode, getRelDisByCCode, findStationType, findAll, deleteField, update } from '@/api/systemManage/siteManage/siteManage'
// 整体页面加载
import CfPanel from '@/components/Panel'
// 分页加载
import Pagination from '@/components/Pagination'

export default {
  name: 'SiteManage',
  components: { CfPanel, Pagination },
  data() {
    return {
      listLoading: true,
      // 分页初始数据
      page: {
        pageNum: 1,
        pageSize: 20,
        importance: undefined,
        title: undefined,
        type: undefined,
        sortField: '',
        sortType: ''
      },
      // 初始化页数
      total: 0,
      // 场地列表数据
      fieldList: [],
      // 搜索的value值
      search_from: {
        // 场地类型数据
        site_type: [],
        // 省市区数据
        provincialCity: [],
        // 当前场地是否启用
        state_data: [{ value: '1', label: '启用' }, { value: '2', label: '停用' }]
      },
      // 搜索的内容
      search_content: {
        region: []
      },
      // 设置省市区格式
      provincialCityFormat: {
        label: 'name',
        value: 'code',
        children: 'children'
      }
    }
  },
  created() {
    // 获取全部的省
    this.getRelProvinces()
    // 获取场地类型列表
    this.findStationType()
    // 查询所有场地-分页
    this.findAll()
  },
  methods: {
    // 添加场地
    add_field() {
      this.$router.push({ name: 'NewSite' })
    },
    // 搜索按钮
    search_button(e) {
      const search_content = {
        type: this.search_content.type,
        transferName: this.search_content.transferName,
        provinceId: this.search_content.region[0],
        cityId: this.search_content.region[1],
        districtId: this.search_content.region[2],
        status: this.search_content.status
      }
      console.log(search_content)
      this.findAll(search_content, true)
    },
    // 重置按钮
    reset_button() {
      // 重置搜索数据
      this.search_content = {
        region: []
      }
    },
    // 更新状态
    status_switch(e) {
      console.log(e)
      const update_list = {
        id: e.id,
        status: e.status ? '1' : '2'
      }
      this.update(update_list)
    },
    // 删除场地
    deleteField(id) {
      deleteField({
        id
      }).then((res) => {
        console.log(res)
      }).catch((err) => {
        this.$message({
          type: 'error',
          message: err.message || '服务端错误，请稍后尝试'
        })
      })
    },
    // 修改用户按钮
    modify_button(row) {
      this.$router.push({ path: 'NewSite', query: { id: row.id }})
    },
    // 删除该场地按钮
    delete_button(row) {
      console.log(row)
      this.$confirm('确定删除该场地吗？', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning',
        closeOnClickModal: false
      }).then(() => {
        this.$notify({
          title: '成功',
          duration: '2000',
          message: '删除用户成功！',
          type: 'success'
        })
        // 删除场地
        this.deleteField(row.id)
        // 查询所有场地-分页
        this.findAll()
      }).catch(() => {
      })
    },
    // 查询所有场地-分页
    findAll(search_content, type) {
      findAll({
        pageNum: this.page.pageNum,
        pageSize: this.page.pageSize,
        ...search_content
      }).then((res) => {
        console.log(res)
        if (type === true) {
          if (res.data.code === 20000) {
            this.$notify({
              title: '成功',
              duration: '2000',
              message: '搜索成功！',
              type: 'success'
            })
          } else {
            this.$notify({
              title: '失败',
              duration: '2000',
              message: res.data.message,
              type: 'error'
            })
          }
        }
        const findAll_list = res.data.data
        findAll_list.list.map((item, i) => {
          if (item.status === 1) {
            this.$set(item, 'status', true)
          } else if (item.status === 2) {
            this.$set(item, 'status', false)
          }
          this.$set(item, 'num', i + 1)
          var sysDeptShowName = ''
          if (item.sysDeptShow) {
            sysDeptShowName = item.sysDeptShow.deptName
            if (item.sysDeptShow.deptShowList.length > 0) {
              sysDeptShowName += ' / ' + item.sysDeptShow.deptShowList[0].deptName
              if (item.sysDeptShow.deptShowList[0].deptShowList.length > 0) {
                sysDeptShowName += ' / ' + item.sysDeptShow.deptShowList[0].deptShowList[0].deptName
                if (item.sysDeptShow.deptShowList[0].deptShowList[0].deptShowList.length > 0) {
                  sysDeptShowName += ' / ' + item.sysDeptShow.deptShowList[0].deptShowList[0].deptShowList[0].deptName
                }
              }
            }
          }
          this.$set(item, 'sysDeptShowName', sysDeptShowName)
        })
        this.fieldList = findAll_list.list
        this.total = 1
        this.listLoading = false
      }).catch((err) => {
        this.$message({
          type: 'error',
          message: err.message || '服务端错误，请稍后尝试'
        })
      })
    },
    // 动态获取市 区
    queryRegion(e) {
      // console.log(e)
      if (e.length === 1) {
        this.getRelCityByPCode(e[0])
      } else if (e.length === 2) {
        this.getRelDisByCCode(e[1])
      }
      if (this.search_content.length >= 3) {
        this.search_content.provinceId = this.search_content[0]
        this.search_content.cityId = this.search_content[1]
        this.search_content.districtId = this.search_content[2]
      }
    },
    // 获取全部的省
    getRelProvinces() {
      getRelProvinces({}).then((res) => {
        const list = res.data.data
        console.log(res)
        list.map(item => {
          this.$set(item, 'children', [])
        })
        this.search_from.provincialCity = list
        // console.log(this.search_from.provincialCity)
      }).catch((err) => {
        this.$message({
          type: 'error',
          message: err.message || '服务端错误，请稍后尝试'
        })
      })
    },
    // 根据code获取市
    getRelCityByPCode(code) {
      getRelCityByPCode({ code }).then((res) => {
        const list = res.data.data
        // console.log(list)
        list.map(item => {
          // console.log(item)
          this.$set(item, 'children', [])
        })
        this.search_from.provincialCity.map((item, i) => {
          // console.log(item.code)
          if (item.code === code) {
            item.children = list
          }
        })
        // console.log(this.search_from.provincialCity)
      }).catch((err) => {
        this.$message({
          type: 'error',
          message: err.message || '服务端错误，请稍后尝试'
        })
      })
    },
    // 根据code获取区
    getRelDisByCCode(code) {
      getRelDisByCCode({ code }).then((res) => {
        const list = res.data.data
        this.search_from.provincialCity.map((item, i) => {
          item.children.map((item, i) => {
            if (item.code === code) {
              item.children = list
            }
          })
        })
      }).catch((err) => {
        this.$message({
          type: 'error',
          message: err.message || '服务端错误，请稍后尝试'
        })
      })
    },
    // 获取场地类型列表
    findStationType() {
      findStationType({}).then((res) => {
        // console.log(res)
        this.search_from.site_type = res.data.data
      }).catch((err) => {
        this.$message({
          type: 'error',
          message: err.message || '服务端错误，请稍后尝试'
        })
      })
    },
    // 跳转详情界面
    details_button(row) {
      this.$router.push({ name: 'SiteDetails', query: { id: row.id }})
    },
    // 修改场地
    update(update_list) {
      update({ ...update_list }).then((res) => {
        if (res.data.code === 20000) {
          this.$notify({
            title: '成功',
            duration: '2000',
            message: '修改成功！',
            type: 'success'
          })
        } else {
          this.$notify({
            title: '失败',
            duration: '2000',
            message: res.data.message,
            type: 'error'
          })
        }
      }).catch((err) => {
        this.$message({
          type: 'error',
          message: err.message || '服务端错误，请稍后尝试'
        })
      })
    }
  }
}
</script>
<style lang="scss">
</style>
