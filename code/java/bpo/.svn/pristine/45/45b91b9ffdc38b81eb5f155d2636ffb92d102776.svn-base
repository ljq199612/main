<template>
  <el-dialog
    class="bpoDialog addGroupDialog"
    title="添加工作小组"
    :visible="addGroupDialogVisible"
    :before-close="close"
  >
    <el-form
      ref="addGroupDialogForm1"
      class="addGroupDialogForm1"
      label-width="90px"
      :model="addGroupDialogForm1"
      :rules="addGroupDialogRules1"
    >
      <el-form-item label="工作模块：" prop="workModuleName">
        <el-select
          v-model="addGroupDialogForm1.workModuleName"
          placeholder="请选择"
        >
          <el-option
            v-for="(item, index) in workNodulesList"
            :key="index"
            :label="item.name"
            :value="item.name"
          />
        </el-select>
      </el-form-item>
    </el-form>
    <el-form
      ref="addGroupDialogForm2"
      class="addGroupDialogForm2"
      label-width="90px"
      :model="addGroupDialogForm2"
      :rules="addGroupDialogRules2"
    >
      <el-form-item
        v-for="(v, name) in addGroupDialogForm2"
        :key="name"
        label="工作小组："
        :prop="name"
      >
        <el-input v-model="addGroupDialogForm2[name]" />
        <span
          v-if="name === 'groupName0'"
          class="moduleBtn"
          @click="addGroupItem"
        ><i class="el-icon-circle-plus" /></span>
        <span v-else class="moduleBtn" @click="removeModuleItem(name)"><i class="el-icon-remove" /></span>
      </el-form-item>
      <el-form-item class="bpoButtonGroup pull-right">
        <el-button type="primary" @click="submit">提交</el-button>
        <el-button @click="close">关闭</el-button>
      </el-form-item>
    </el-form>
  </el-dialog>
</template>

<script>
import { caculateObjectLength } from './../utils/utils'
export default {
  props: {
    workNodulesList: {
      type: Array,
      default() {
        return []
      }
    },
    // 新增模块弹窗
    addGroupDialogVisible: {
      type: Boolean,
      default: false
    }
  },
  data() {
    return {
      value: '',
      // 新增模块弹窗数据
      addGroupDialogForm1: {
        workModuleName: ''
      },
      addGroupDialogForm2: {
        groupName0: ''
      },
      // 新增模块弹窗校验规则
      addGroupDialogRules1: {
        workModuleName: {
          required: true,
          message: '请选择模块',
          trigger: 'blur'
        }
      },
      addGroupDialogRules2: {
        groupName0: {
          required: true,
          message: '请选输入小组名称',
          trigger: 'blur'
        }
      }
    }
  },
  methods: {
    /**
     * 工作模块弹窗，新增模块项
     */
    addGroupItem() {
      // 生成模块字段
      const index = caculateObjectLength(this.addGroupDialogForm2)
      const name = 'groupName' + index
      this.$set(this.addGroupDialogForm2, name, '')
      // 生成校验规则
      const ruleItem = {
        required: true,
        message: '请输入小组名称',
        trigger: 'blur'
      }
      this.$set(this.addGroupDialogRules2, name, ruleItem)
    },
    /**
     * 工作模块弹窗，删除模块项
     */
    removeModuleItem(name) {
      const addGroupDialogForm2 = JSON.parse(
        JSON.stringify(this.addGroupDialogForm2)
      )
      delete addGroupDialogForm2[name]
      this.$set(this, 'addGroupDialogForm2', addGroupDialogForm2)
    },
    submit() {
      /*
      this.$refs['addGroupDialogForm1'].validate((valid) => {
        if (valid) {
          const arr = []
          // 构建脑图数据
          for (const key in this.addGroupDialogForm1) {
            if (this.addGroupDialogForm1.hasOwnProperty(key)) {
              arr.push({
                name: this.addGroupDialogForm1[key],
                id: this.addGroupDialogForm1[key],
                level: 1 // 第一级数据
              })
            }
          }
          this.$emit('addModule', arr)
        } else {
          console.log('error submit!!')
          return false
        }
      })
      */
      Promise.all([this.validateForm1(), this.validateForm2()])
        .then(() => {
          console.log('提交数据')
        })
        .catch((err) => {
          console.log(err)
        })
    },
    /**
     * 校验表单1数据
     */
    validateForm1() {
      return new Promise((resolve, reject) => {
        this.$refs['addGroupDialogForm1'].validate((valid) => {
          if (valid) {
            resolve()
          } else {
            reject()
          }
        })
      })
    },
    /**
     * 校验表单2数据
     */
    validateForm2() {
      return new Promise((resolve, reject) => {
        this.$refs['addGroupDialogForm2'].validate((valid) => {
          if (valid) {
            resolve()
          } else {
            reject()
          }
        })
      })
    },
    close() {
      this.$emit('hideAddGroupDialog')
    }
  }
}
</script>

<style lang="scss">
// 添加模块弹窗
.addGroupDialog {
  .el-dialog {
    width: 500px;
  }
  .el-form-item__content {
    display: flex;
  }
  .moduleBtn {
    cursor: pointer;
    margin-left: 10px;
    font-size: 22px;
  }
  .addGroupDialogForm1 {
    .el-form-item__content {
      padding-right: 32px;
    }
  }
}
</style>
