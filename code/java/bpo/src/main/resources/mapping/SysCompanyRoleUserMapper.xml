<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rz.iot.bpo.mapper.SysCompanyRoleUserMapper" >
  <resultMap id="BaseResultMap" type="com.rz.iot.bpo.model.SysCompanyRoleUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, role_id, user_id, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_company_role_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_company_role_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rz.iot.bpo.model.SysCompanyRoleUser" >
    insert into sys_company_role_user (id, company_id, role_id, 
      user_id, status)
    values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rz.iot.bpo.model.SysCompanyRoleUser" >
    insert into sys_company_role_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rz.iot.bpo.model.SysCompanyRoleUser" >
    update sys_company_role_user
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rz.iot.bpo.model.SysCompanyRoleUser" >
    update sys_company_role_user
    set company_id = #{companyId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

<select id="selectCompanyIdByUserId" resultType="java.lang.Integer">
    select company_id from sys_company_role_user where user_id = #{id,jdbcType=INTEGER}
  </select>

<select id="findAllUserRolePer" parameterType="com.rz.iot.bpo.model.param.SysPerParam" resultType="com.rz.iot.bpo.model.show.SysPerShow">
    select usr.user_id as userId,usr.username as username,role.id as roleId,role.role_name as roleName,org.id as orgId,org.org_name as orgName,
    usr.create_time as createTime,usr.status as status,dept.dept_id as deptId,com.company_name as companyName from sys_user usr
    left join sys_company_role_user rel ON rel.user_id = usr.user_id AND rel.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    left join sys_company com ON rel.company_id = com.id AND com.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    left join sys_org org ON com.org_type = org.id AND org.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    left join sys_role role ON role.id = rel.role_id AND role.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    left join sys_dept_user_rel dept_rel ON dept_rel.user_id = usr.user_id AND dept_rel.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    left join sys_dept dept ON dept.dept_id = dept_rel.dept_id and dept.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    where usr.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    <if test="orgKey != null and orgKey != ''">
      and org.id = #{orgKey}
    </if>
    <if test="roleId != null and roleId != 0">
      and role.id = #{roleId}
    </if>
    <if test="username != null and username != ''">
      and usr.username like concat('%',#{username},'%')
    </if>
    <if test="deptId != null">
      and dept.dept_id = #{deptId}
    </if>
  </select>
  <update id="update">
    update sys_company_role_user
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_company_role_user
    where user_id = #{id,jdbcType=INTEGER}
  </select>
</mapper>