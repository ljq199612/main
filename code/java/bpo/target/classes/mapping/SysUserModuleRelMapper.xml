<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rz.iot.bpo.mapper.SysUserModuleRelMapper" >
  <resultMap id="BaseResultMap" type="com.rz.iot.bpo.model.SysUserModuleRel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, module_id, type, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_module_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user_module_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rz.iot.bpo.model.SysUserModuleRel" >
    insert into sys_user_module_rel (id, user_id, module_id, 
      type, status, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{moduleId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rz.iot.bpo.model.SysUserModuleRel" >
    insert into sys_user_module_rel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rz.iot.bpo.model.SysUserModuleRel" >
    update sys_user_module_rel
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null" >
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rz.iot.bpo.model.SysUserModuleRel" >
    update sys_user_module_rel
    set user_id = #{userId,jdbcType=INTEGER},
      module_id = #{moduleId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findDataPerByOrgRoleUser" parameterType="com.rz.iot.bpo.model.param.SysPerParam" resultType="com.rz.iot.bpo.model.show.SysDataPerShow">
    SELECT pro.id AS moduleId,pro.project_name AS moduleName,usr.user_id AS userId,rel.`type` AS moduleType,rel.id AS id
    FROM bpo_project pro
    LEFT JOIN sys_user_module_rel rel ON rel.module_id = pro.id AND rel.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} AND rel.`type` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_USER_MODULE_PRO}
    LEFT JOIN sys_user usr ON usr.user_id = rel.user_id AND usr.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    WHERE pro.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} AND pro.id IN(
    SELECT pro.id AS moduleId
    FROM bpo_project pro
    LEFT JOIN sys_user_module_rel rel ON rel.module_id = pro.id AND rel.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} AND rel.`type` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_USER_MODULE_PRO}
    LEFT JOIN sys_user usr ON usr.user_id = rel.user_id AND usr.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    WHERE pro.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} AND (CASE (
    SELECT cru_rel.role_id
    FROM sys_company_role_user cru_rel
    LEFT JOIN sys_user s_usr ON cru_rel.user_id = s_usr.user_id AND s_usr.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    WHERE s_usr.username = #{username} AND cru_rel.status = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}) WHEN  ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_ROLE_ADMIN} THEN TRUE ELSE usr.username = #{username} END))
    AND (CASE (
    SELECT cru_rel.role_id
    FROM sys_company_role_user cru_rel
    LEFT JOIN sys_user s_usr ON cru_rel.user_id = s_usr.user_id AND s_usr.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    WHERE s_usr.username = #{username}  AND cru_rel.status = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}) WHEN ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} THEN TRUE ELSE usr.username = #{username}  END)
  </select>
  <select id="findUnDataPerByOrgRoleUser" parameterType="com.rz.iot.bpo.model.param.SysPerParam" resultType="com.rz.iot.bpo.model.show.SysDataPerShow">
    SELECT pro.id AS moduleId,pro.project_name AS moduleName,usr.user_id AS userId,rel.`type` AS moduleType,rel.id AS id
    FROM bpo_project pro
    LEFT JOIN sys_user_module_rel rel ON rel.module_id = pro.id AND rel.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} AND rel.`type` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_USER_MODULE_PRO}
    LEFT JOIN sys_user usr ON usr.user_id = rel.user_id AND usr.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    WHERE pro.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} AND pro.id NOT IN(
    SELECT pro.id AS moduleId
    FROM bpo_project pro
    LEFT JOIN sys_user_module_rel rel ON rel.module_id = pro.id AND rel.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} AND rel.`type` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_USER_MODULE_PRO}
    LEFT JOIN sys_user usr ON usr.user_id = rel.user_id AND usr.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    WHERE pro.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS} AND (CASE (
    SELECT cru_rel.role_id
    FROM sys_company_role_user cru_rel
    LEFT JOIN sys_user s_usr ON cru_rel.user_id = s_usr.user_id AND s_usr.`status` = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}
    WHERE s_usr.username = #{username} AND cru_rel.status = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS}) WHEN ${@com.rz.iot.bpo.common.constant.DictDataConstants@SYS_ROLE_ADMIN} THEN TRUE ELSE usr.username = #{username} END))
  </select>
  <insert id="insertDataPer" parameterType="com.rz.iot.bpo.model.show.SysDataPerShow">
    INSERT INTO sys_user_module_rel
    (user_id,module_id,`type`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId},#{item.moduleId},#{item.moduleType})
    </foreach>
  </insert>
  
  <update id="delete" parameterType="com.rz.iot.bpo.model.show.SysDataPerShow">
    update sys_user_module_rel  set status = ${@com.rz.iot.bpo.common.constant.DictDataConstants@DELETE_STATUS}
    where
    <foreach collection="list" item="item" separator="OR">
     (
      user_id = #{item.userId}
      and module_id = #{item.moduleId}
      and `type` = #{item.moduleType}
      )
    </foreach>
  </update>

  <select id="selectProjectIdsByUserId" resultType="java.lang.Integer">
    select module_id from sys_user_module_rel
    where user_id = #{userId,jdbcType=INTEGER}
    and status = ${@com.rz.iot.bpo.common.constant.DictDataConstants@NORMAL_STATUS})
  </select>
</mapper>